keytool -genkey -keystore yourKEYSTORE -keyalg RSA
They make it look so simple: http://www.java2s.com/Tutorial/Java/0490__Security/SSLSocketServer.htm
http://www.java2s.com/Tutorial/Java/0490__Security/SSLServerSession.htm
http://www.fehcom.de/qmail/smtptls.html
http://www.postfix.org/TLS_README.html
http://www.exim.org/exim-html-current/doc/html/spec_html/ch-encrypted_smtp_connections_using_tlsssl.html
http://www.exim.org/exim-html-current/doc/html/spec_html/ch-encrypted_smtp_connections_using_tlsssl.html#SECTcerandall
http://www.modssl.org/docs/2.7/ssl_faq.html#ToC24
http://stackoverflow.com/questions/6786945/how-to-do-ssl-socket-programming
http://stackoverflow.com/questions/6559859/is-it-possible-to-change-plain-socket-to-sslsocket
http://stackoverflow.com/questions/25637039/detecting-ssl-connection-and-converting-socket-to-sslsocket
http://james.apache.org/server/3/config-ssl-tls.html

I think RSA is preferred algo for keystore

http://www.javaworld.com/article/2075188/learn-java/construct-secure-networked-applications-with-certificates--part-4.html
https://docs.oracle.com/cd/E11035_01/wls100/security/SSL_client.html#wp1029656
https://www.owasp.org/index.php/Using_the_Java_Secure_Socket_Extensions
https://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html

GUI for keytool: http://portecle.sourceforge.net/

KeyStore: Your keys
TrustManaget: Other people's certs

